* Tree search algo
  - Add tree visualization
  - Improve quality: debug
  - Improve speed: diagnostics, tree trimmming
* Add to UI:
  - Add scoreboard for multiple games
  - Show more info on game like board count
  - Show possible moves, scoring moves, suggestions from bots
  - Drag and drop pieces
  - Board comes from middle, bends corners
* Reinforcement learning
  - RL self-study course
  - Build MCST
  - Encode state and moves as inputs for net
  - Set up deep net training: TF, cloud resources?
  - If necessary, speed up the core
* Refactoring
  - Create API class for algos
  - Rewrite serve_value.py to work again
  - Create algos_util.py
* More tests
  - Unit tests for Board and Game
  - Integration tests for internal state (history)
* Heuristics
  - Deduce tiles they don't have from skipped scores/knocks
  - Box out with numbers you have
  - Keep open if on serve, closed if not
  - Tile values, consider follow-up tiles
