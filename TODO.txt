* Make tests
  - Tests for each class
  - Tests for make_move algos
  - Tests for internal state (history)
* Tree search algo
  - Function to evaluate probability of winning given state
  - Tree search on state function: model drawing
  - Go out more steps
* Heuristics
  - Deduce tiles they don't have from skipped scores/knocks
  - Box out with numbers you have
  - Keep open if on serve, closed if not
  - Incorporate probabilities for opponent moves
  - Tile values, consider follow-up tiles
* Build interactive UI: 
  - Full board display, with bending
  - Show possible moves, scoring moves, suggestions from bots
  - Add scoreboard for multiple games
* Reinforcement learning
  - Learn about RL from self-study course
  - Try some basic things
  - If necessary, speed up the core
